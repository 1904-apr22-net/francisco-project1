@model HardwareStore.WebUI.Models.OrderViewModel
@{
    ViewData["Title"] = "Create";
}

<h1>Create Order</h1>
<form asp-action="Create">
    @if (Model.Locations != null)
    {
        <div class="form-group">
            <label asp-for="LocationId" class="control-label">Location</label>
            <select asp-for="LocationId"
                    asp-items="@(new SelectList(Model.Locations, "LocationId", "Name"))" class="form-control"></select>
        </div>
    }
    @if (Model.Customers != null)
    {
        <div class="form-group">
            <label asp-for="CustomerId" class="control-label">Customer</label>
            <select asp-for="CustomerId"
                    asp-items="@(new SelectList(Model.Customers, "CustId", "FirstName"))" class="form-control"></select>
        </div>
    }
    <div>
        @Html.LabelFor(model => model.Products)
        <br>
        @for (var i = 0; i < Model.Products.Count; i++)
        {
            @Html.HiddenFor(m => Model.Products[i].ProductId)
            @Html.HiddenFor(m => Model.Products[i].ProductName)
            @Html.HiddenFor(m => Model.Products[i].Description)
            @Html.HiddenFor(m => Model.Products[i].Price)
            @Html.CheckBoxFor(m => Model.Products[i].Checked)
            @:&nbsp;
            @Model.Products[i].ProductName
            @:&nbsp;
            @Html.EditorFor(m => Model.AmountItems[i].QuantityBought)
            @Html.HiddenFor(m => Model.AmountItems[i].OrderItemNum)
            <br />
        }
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>
<form asp-action="Order">
    <div class="form-group">
        <input type="submit" value="Order preset" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
